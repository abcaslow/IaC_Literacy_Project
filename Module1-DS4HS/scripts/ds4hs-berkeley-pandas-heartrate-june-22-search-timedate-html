<!DOCTYPE HTML><html><body>Analyzing an AppleWatch Heartrate Dataset<br><br>Getting Started<br>Open a Jupyter Lab Terminal.<br><br>To Access the Correct BBB Shared Notes File from &#x2F;scripts<br>bbb-shared-notes --set&nbsp; &lt; ds4hs-berkeley-pandas-heartrate-june<br>DO NOT REVERSE THE &lt; to a &gt;&nbsp;&nbsp; THIS IS A&nbsp; D-I-S-A-S-T-E-R!&nbsp;<br>jbs<br>Make sure you are in IaC_Literacy_Project&#x2F;Module1-DS4HS&#x2F;scripts<br>Enter: ipython3<br>Remember to use&nbsp; the &lt;tab&gt; key and the ? for help.<br><br>Import the necessary Python Modules:<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>from datascience import *<br>import numpy as np<br>import pandas as pd&nbsp;<br>import matplotlib.pyplot as plt<br>%matplotlib inline<br>How to import&nbsp; a csv data file into bds and pds<br>bdf=Table.read_table(&#x27;.&#x2F;data&#x2F;heartrate-June.csv&#x27;)<br>df=pd.read_csv(&#x27;.&#x2F;data&#x2F;heartrate-June.csv&#x27;)<br>NOTE: There is a pandas read_csv (nrows=n) parameter.<br>How inspect the data that is imported<br>BDS<br>bdf&nbsp; #Only the first 10 rows will be displayed<br>bdf.num_rows&#x2F;bdf.num_columns&#x2F;bdf.labels<br>*bdf.shapehrlania<br>bdf.dtype<br>bdf.columns *very different than df.columns<br>bdf.take[:10]&nbsp; equal to df.head(10) but use numpy [:] notation<br>bdf.take[-10:]&nbsp; equal to df.tail(10) but use numpy [:] notation<br><br>PDS<br>df # All df rows will be displayed; use df.head(10) to see 1st 10 rows<br>df.info()<br>df.shape<br>df.columns<br>df.dtypes<br>df.head&nbsp; default - first 4 and the last 5.<br>df.head(x)&nbsp;&nbsp; where x is the top rows of the dataframe<br>df.tail(x)&nbsp;&nbsp; where x is the bottom rows of the dataframe<br><br>Trim Characters from a pandas string (Ex: date&#x2F;timestamp)<br><br>dflania[&#x27;timestamp&#x27;].str[:19] #yr-mo-date hr-min-sec<br><br>How to Analyze Specific General Characteristics of the Data<br>BDS<br>for i in range(30,110,10): print(i,len(bdf[1][bdf[1]&lt;i]))<br>for i in range(100,210,10): print(i,len(bdf[1][bdf[1]&gt;i]))<br>PDS<br>df.describe()<br><br>How to select a subset of rows from a Table&#x2F;Dataframe<br>BDS #For help, use &quot;?Table.take&quot; or &quot;?Table.where&quot;<br>bdf.take[x:y]&nbsp; #This is a very flexible cmd for selecting rows.<br><br>bdf.where(&#x27;hr&#x27;, are.between_or_equal_to(82, 200))<br>t.where(&#x27;Sizes&#x27;, are.containing(&#x27;L&#x27;))<br>t.where(&#x27;Sizes&#x27;, are.not_containing(&#x27;L&#x27;))<br>t.where(&#x27;Sizes&#x27;, are.contained_in(&#x27;MXL&#x27;))&nbsp; #LOGICAL OR!!!!!<br>Sizes | Waists<br>t.where(&#x27;Sizes&#x27;, are.contained_in(&#x27;L&#x27;))<br>t.where(&#x27;Sizes&#x27;, are.not_contained_in(&#x27;MXL&#x27;)) #LOGICAL OR!!!!!<br><br>PDS - the iloc &amp; loc methods&#x2F;For help: &quot;?df.iloc&quot; or &quot;?df.loc&quot;<br>df.iloc[:10]<br>df.iloc[:10, 3:6] #like bds take but can specify columns as well<br>&nbsp;#MUST DO THIS FOR loc<br>df.loc[[&#x27;Apple&#x27;,&#x27;Facebook&#x27;]] #Note the use of double brackets!<br>df.loc[(df[&#x27;market-cap&#x27;] &gt; 70) &amp; (df[&#x27;sector&#x27;] == &#x27;retail&#x27;)]<br><br>BDS to PDS<br>bdf.to_df()<br>bdf.from_df(df-name)<br><br>=================<br>dftslania=dflania[&#x27;timestamp&#x27;].str[:19]<br>srslaniahr=dflania[&#x27;heartrate&#x27;]<br>dffrax=pd.concat([dftslania,srslaniahr], axis=1)<br>dftsfrax1 = dffrax.set_index(&#x27;timestamp&#x27;)<br>dftsfrax1[&#x27;2019-06-08 14:21:11&#x27; :&#x27;2019-06-08 14:56:23&#x27;]<br>dftsfrax1.iloc[1000:1010]<br><br>temp1=dflania[dflania[&#x27;timestamp&#x27;].str.contains(&#x27;2019-06-09 1&#x27;)]<br>dflan<br><br><a href="https&#x3a;&#x2F;&#x2F;stackoverflow&#x2e;com&#x2F;questions&#x2F;11350770&#x2F;select&#x2d;by&#x2d;partial&#x2d;string&#x2d;from&#x2d;a&#x2d;pandas&#x2d;dataframe" rel="noreferrer noopener">https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;11350770&#x2F;select-by-partial-string-from-a-pandas-dataframe</a><br><br>for a pandas column in a dataframe:<br>dflaniaidx1 = dflaniaidx.rename(columns={&#x27;timestamp&#x27;: &#x27;dateidx&#x27;})<br>for the one and only one column in a pandas series<br>dflaniaidx1 = dflaniaidx.rename(&#x27;dateidx&#x27;)<br><br><br><br><br><br><br></body></html>
